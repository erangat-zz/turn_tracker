{"version":3,"sources":["app/state/stateProvider.js","app/components/playerSelect/PlayerCard.jsx","app/reducers/playerReducer.js","app/components/playerSelect/PlayerSelect.js","app/reducers/timersReducer.js","app/utils.js","app/components/gameTimers/Timer.js","app/components/gameTimers/Round.js","app/components/gameTimers/GameTimers.js","app/components/summary/Summary.js","app/components/turnTracker/TurnTracker.js","app/App.js","serviceWorker.js","index.js"],"names":["StateContext","createContext","StateProvider","_ref","reducer","initialState","children","react_default","a","createElement","Provider","value","useReducer","useStateValue","useContext","PlayerCard","props","_useState","useState","_useState2","Object","slicedToArray","displayPicker","setDisplayPicker","_useState3","color","_useState4","setColor","_useState5","name","_useState6","setName","nameRef","useRef","id","onChange","useEffect","className","onClick","lib","newColor","hex","triangle","onSubmit","event","current","blur","preventDefault","placeholder","ref","type","target","onRemove","style","backgroundColor","ADD_PLAYER","REMOVE_PLAYER","UPDATE_PLAYER","SET_TURNS","playersAdded","players","turns","playerReducer","state","action","console","log","updatedPlayers","concat","toConsumableArray","objectSpread","addPlayer","filter","player","removePlayer","playerId","updatedPlayer","map","updatePlayer","setTurns","PlayerSelect","_useStateValue","_useStateValue2","dispatch","index","playerSelect_PlayerCard","key","onNext","MAKE_TIMER_ACTIVE","PAUSE_TIMER","TIMER_TICK","END_ROUND","START_ROUND","activeTimer","activeTicks","timers","ticks","isPaused","endRoundTimer","roundNumber","isEndOfRound","isFirstPlayOfRound","createTurn","duration","round","timersReducer","timerId","makeTimerActive","numberOfTimers","length","nextTimer","pauseTimer","updatedTimers","tickTimer","startRound","endRound","valueToDoubleDigits","ticksToTime","miliSeconds","totalSeconds","Math","floor","seconds","minutes","ticksToShortTime","Timer","onStart","onPause","Round","roundTimer","onEndGame","GameTimers","globalState","globalDispatch","_useReducer","_useReducer2","interval","setInterval","clearInterval","Fragment","gameTimers_Round","timer","gameTimers_Timer","sum","arr","reduce","p","c","groupBy","list","keyGetter","Map","forEach","item","collection","get","push","set","calculateTotals","groupByPicker","totalByPicker","groupedTurns","turn","totals","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","undefined","_step2","_iterator2","keys","Symbol","iterator","next","done","currentTurns","total","err","return","minTurnReducer","currentMin","Summary","totalDuration","playerTurns","shortestTurn","averages","playerAverages","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","playerTurn","playerAverage","average","calculatePlayerTurnAverages","roundTotals","calculateRoundTotals","playerTotals","calculatePlayerTurnTotals","playerTotal","roundTotal","TurnTracker","step","setStep","playerSelect_PlayerSelect","gameTimers_GameTimers","summary_Summary","App","stateProvider","turnTracker_TurnTracker","Boolean","window","location","hostname","match","ReactDOM","render","src_app_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d38efe59.chunk.js","sourcesContent":["import React, { createContext, useContext, useReducer } from \"react\";\r\n\r\nexport const StateContext = createContext();\r\nconst StateProvider = ({ reducer, initialState, children }) => (\r\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n    {children}\r\n  </StateContext.Provider>\r\n);\r\n\r\nexport default StateProvider;\r\nexport const useStateValue = () => useContext(StateContext);\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { TwitterPicker } from \"react-color\";\r\n\r\nimport \"./PlayerCard.scss\";\r\n\r\nfunction PlayerCard(props) {\r\n  const [displayPicker, setDisplayPicker] = useState(false);\r\n  const [color, setColor] = useState(props.color);\r\n  const [name, setName] = useState(props.name);\r\n  const nameRef = useRef(null);\r\n  const { id, onChange } = props;\r\n\r\n  const handleClick = () => {\r\n    setDisplayPicker(!displayPicker);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setDisplayPicker(false);\r\n  };\r\n\r\n  const handleChange = newColor => {\r\n    setColor(newColor.hex);\r\n    setDisplayPicker(false);\r\n    props.onChange({ name: name, color: newColor, id: id });\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    nameRef.current.blur();\r\n    event.preventDefault();\r\n  };\r\n\r\n  const handleNameChange = event => {\r\n    setName(event.target.value);\r\n  };\r\n\r\n  useEffect(\r\n    () => {\r\n      let newColor = color;\r\n      onChange({ name: name, color: newColor, id: id });\r\n    },\r\n    [name, color]\r\n  );\r\n\r\n  return (\r\n    <div className=\"PlayerCard\">\r\n      <div className=\"PlayerCard-info-container\">\r\n        {displayPicker ? (\r\n          <div className=\"PlayerCard-popover\">\r\n            <div className=\"PlayerCard-cover\" onClick={handleClose} />\r\n            <TwitterPicker onChange={handleChange} triangle=\"hide\" />\r\n          </div>\r\n        ) : null}\r\n        <div className=\"PlayerCard-picture\">\r\n          <p> Pic </p>\r\n        </div>\r\n        <div className=\"PlayerCard-name\">\r\n          <form onSubmit={handleSubmit}>\r\n            <input\r\n              placeholder={\"Player\" + props.id}\r\n              ref={nameRef}\r\n              type=\"text\"\r\n              value={props.name}\r\n              onChange={handleNameChange}\r\n            />\r\n          </form>\r\n        </div>\r\n        <div className=\"PlayerCard-remove\">\r\n          <p onClick={() => props.onRemove(props.id)}> Remove </p>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className=\"PlayerCard-color\"\r\n        style={{ backgroundColor: color }}\r\n        onClick={handleClick}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlayerCard;\r\n","export const ADD_PLAYER = \"ADD_PLAYER\";\r\nexport const REMOVE_PLAYER = \"REMOVE_PLAYER\";\r\nexport const UPDATE_PLAYER = \"UPDATE_PLAYER\";\r\nexport const SET_TURNS = \"SET_TURNS\";\r\n\r\nexport const initialState = {\r\n  playersAdded: 2,\r\n  players: [\r\n    {\r\n      name: \"P1\",\r\n      color: \"#FF0000\",\r\n      id: 1\r\n    },\r\n    {\r\n      name: \"P2\",\r\n      color: \"#00FF00\",\r\n      id: 2\r\n    }\r\n  ],\r\n  turns: []\r\n};\r\n\r\nconst setTurns = (turns, state) => {\r\n  console.log(\"setTurns\");\r\n  console.log(state);\r\n  console.log(turns);\r\n\r\n  return {\r\n    ...state,\r\n    turns: turns\r\n  };\r\n};\r\n\r\nconst addPlayer = state => {\r\n  const playersAdded = state.playersAdded + 1;\r\n  const updatedPlayers = [\r\n    ...state.players,\r\n    {\r\n      name: \"\",\r\n      color: \"#111111\",\r\n      id: playersAdded\r\n    }\r\n  ];\r\n\r\n  return {\r\n    ...state,\r\n    players: updatedPlayers,\r\n    playersAdded: playersAdded\r\n  };\r\n};\r\n\r\nconst updatePlayer = (id, updatedPlayer, state) => {\r\n  return {\r\n    ...state,\r\n    players: state.players.map(player => {\r\n      if (player.id === id) {\r\n        return updatedPlayer;\r\n      }\r\n\r\n      return player;\r\n    })\r\n  };\r\n};\r\n\r\nconst removePlayer = (id, state) => {\r\n  let players = state.players.filter(player => player.id !== id);\r\n\r\n  return { ...state, players: players };\r\n};\r\n\r\nexport const playerReducer = (state, action) => {\r\n  console.log(action.type);\r\n  console.log(state);\r\n\r\n  switch (action.type) {\r\n    case ADD_PLAYER:\r\n      return addPlayer(state);\r\n    case REMOVE_PLAYER:\r\n      return removePlayer(action.playerId, state);\r\n    case UPDATE_PLAYER:\r\n      return updatePlayer(action.playerId, action.player, state);\r\n    case SET_TURNS:\r\n      return setTurns(action.turns, state);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { useStateValue } from \"../../state/stateProvider\";\r\n\r\nimport PlayerCard from \"./PlayerCard\";\r\nimport \"./PlayerCard.scss\";\r\nimport {\r\n  ADD_PLAYER,\r\n  REMOVE_PLAYER,\r\n  UPDATE_PLAYER\r\n} from \"../../reducers/playerReducer\";\r\n\r\nfunction PlayerSelect(props) {\r\n  let [state, dispatch] = useStateValue();\r\n\r\n  let players = state.players;\r\n\r\n  return (\r\n    <div className=\"playerSelect\">\r\n      <h1> Player Select </h1>\r\n      {players.map((player, index) => (\r\n        <PlayerCard\r\n          name={player.name}\r\n          color={player.color}\r\n          id={player.id}\r\n          key={index}\r\n          onRemove={() =>\r\n            dispatch({ type: REMOVE_PLAYER, playerId: player.id })}\r\n          onChange={updatedPlayer =>\r\n            dispatch({\r\n              type: UPDATE_PLAYER,\r\n              playerId: player.id,\r\n              player: updatedPlayer\r\n            })}\r\n        />\r\n      ))}\r\n      <button onClick={() => dispatch({ type: ADD_PLAYER })}>Add</button>\r\n      <div className=\"btn-bottom-big\" onClick={() => props.onNext()}>\r\n        Start\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlayerSelect;\r\n","export const MAKE_TIMER_ACTIVE = \"MAKE_TIMER_ACTIVE\";\r\nexport const NEXT_TIMER = \"NEXT_TIMER\";\r\nexport const PAUSE_TIMER = \"PAUSE_TIMER\";\r\nexport const TIMER_TICK = \"TIMER_TICK\";\r\nexport const END_ROUND = \"END_ROUND\";\r\nexport const START_ROUND = \"START_ROUND\";\r\nexport const UPDATE_PLAYER = \"UPDATE_PLAYER\";\r\n\r\nexport const initialState = players => {\r\n  return {\r\n    activeTimer: 0,\r\n    activeTicks: 0,\r\n    timers: players.map((player, index) => ({\r\n      name: player.name,\r\n      color: player.color,\r\n      ticks: 0\r\n    })),\r\n    isPaused: true,\r\n    endRoundTimer: 0,\r\n    roundNumber: 1,\r\n    isEndOfRound: true,\r\n    isFirstPlayOfRound: true,\r\n    turns: []\r\n  };\r\n};\r\n\r\nconst startRound = state => {\r\n  return {\r\n    ...state,\r\n    isEndOfRound: false,\r\n    turns: [...state.turns, createTurn(state)],\r\n    activeTicks: 0\r\n  };\r\n};\r\n\r\nconst endRound = state => {\r\n  return {\r\n    ...state,\r\n    roundNumber: state.roundNumber + 1,\r\n    isEndOfRound: true,\r\n    isPaused: true,\r\n    turns: [...state.turns, createTurn(state)],\r\n    endRoundTimer: 0,\r\n    isFirstPlayOfRound: true\r\n  };\r\n};\r\n\r\nconst makeTimerActive = (timerId, state) => {\r\n  if (timerId === state.activeTimer || state.isFirstPlayOfRound) {\r\n    return {\r\n      ...state,\r\n      activeTimer: timerId,\r\n      isPaused: false,\r\n      isFirstPlayOfRound: false\r\n    };\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    activeTimer: timerId,\r\n    isPaused: false,\r\n    turns: [...state.turns, createTurn(state)],\r\n    activeTicks: 0\r\n  };\r\n};\r\n\r\nconst createTurn = state => {\r\n  return {\r\n    name: state.isEndOfRound ? \"Setup\" : state.timers[state.activeTimer].name,\r\n    duration: state.isEndOfRound ? state.endRoundTimer : state.activeTicks,\r\n    round: state.roundNumber\r\n  };\r\n};\r\n\r\nconst nextTimer = state => {\r\n  const numberOfTimers = state.timers.length;\r\n  const nextTimer = state.activeTimer + 1 % numberOfTimers;\r\n\r\n  return {\r\n    ...state,\r\n    activeTimer: nextTimer,\r\n    turns: [...state.turns, createTurn(state)],\r\n    activeTicks: 0\r\n  };\r\n};\r\n\r\nconst pauseTimer = state => {\r\n  return { ...state, isPaused: true };\r\n};\r\n\r\nconst tickTimer = state => {\r\n  if (state.isEndOfRound) {\r\n    return { ...state, endRoundTimer: state.endRoundTimer + 1 };\r\n  }\r\n\r\n  let updatedTimers = [...state.timers];\r\n  updatedTimers[state.activeTimer].ticks++;\r\n\r\n  return {\r\n    ...state,\r\n    timers: updatedTimers,\r\n    activeTicks: state.activeTicks + 1\r\n  };\r\n};\r\n\r\nconst updatePlayer = (id, updatedPlayer, state) => {\r\n  return {\r\n    ...state,\r\n    players: state.players.map(player => {\r\n      if (player.id === id) {\r\n        return updatedPlayer;\r\n      }\r\n\r\n      return player;\r\n    })\r\n  };\r\n};\r\n\r\nexport const timersReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case MAKE_TIMER_ACTIVE:\r\n      return makeTimerActive(action.timerId, state);\r\n    case NEXT_TIMER:\r\n      return nextTimer(state);\r\n    case PAUSE_TIMER:\r\n      return pauseTimer(state);\r\n    case TIMER_TICK:\r\n      return tickTimer(state);\r\n    case UPDATE_PLAYER:\r\n      return updatePlayer(action.playerId, action.player, state);\r\n    case START_ROUND:\r\n      return startRound(state);\r\n    case END_ROUND:\r\n      return endRound(state);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","const valueToDoubleDigits = value => {\r\n  return value < 10 ? \"0\" + value : \"\" + value;\r\n};\r\n\r\nexport const ticksToTime = ticks => {\r\n  // Seconds\r\n  const miliSeconds = ticks % 10;\r\n  const totalSeconds = Math.floor(ticks / 10);\r\n  const seconds = totalSeconds % 60;\r\n  const totalMinutes = Math.floor(totalSeconds / 60);\r\n  const minutes = totalMinutes % 60;\r\n  const hours = Math.floor(minutes / 60);\r\n\r\n  return (\r\n    hours +\r\n    \":\" +\r\n    valueToDoubleDigits(minutes) +\r\n    \":\" +\r\n    valueToDoubleDigits(seconds) +\r\n    \".\" +\r\n    miliSeconds\r\n  );\r\n};\r\n\r\nexport const ticksToShortTime = ticks => {\r\n  // Seconds\r\n  const miliSeconds = ticks % 10;\r\n  const totalSeconds = Math.floor(ticks / 10);\r\n  const seconds = totalSeconds % 60;\r\n  const minutes = Math.floor(totalSeconds / 60);\r\n\r\n  return minutes + \":\" + valueToDoubleDigits(seconds) + \".\" + miliSeconds;\r\n};\r\n","import React from \"react\";\r\nimport \"./timer.scss\";\r\nimport { ticksToTime } from \"../../utils\";\r\n\r\nfunction Timer(props) {\r\n  return (\r\n    <div className=\"timer\" style={{ backgroundColor: props.color }}>\r\n      <h2>\r\n        {props.name} - {ticksToTime(props.ticks)}\r\n      </h2>\r\n      <div className=\"buttons\">\r\n        <button onClick={() => props.onStart()}> Start</button>\r\n        <button onClick={() => props.onPause()}> Pause</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Timer;\r\n","import React from \"react\";\r\nimport { ticksToTime } from \"../../utils\";\r\nimport \"./round.scss\";\r\n\r\nfunction Round(props) {\r\n  return (\r\n    <div className=\"round\">\r\n      <h1> Round {props.roundNumber}</h1>\r\n      <h2>{ticksToTime(props.roundTimer)}</h2>\r\n      <div className=\"buttons\">\r\n        <button onClick={() => props.onStart()}> Start Round</button>\r\n        <button onClick={() => props.onEndGame()}> End Game</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Round;\r\n","import React, { useReducer, useEffect } from \"react\";\r\nimport { useStateValue } from \"../../state/stateProvider\";\r\nimport {\r\n  timersReducer,\r\n  initialState,\r\n  TIMER_TICK,\r\n  MAKE_TIMER_ACTIVE,\r\n  PAUSE_TIMER,\r\n  START_ROUND,\r\n  END_ROUND\r\n} from \"../../reducers/timersReducer\";\r\n\r\nimport { SET_TURNS } from \"../../reducers/playerReducer\";\r\n\r\nimport Timer from \"./Timer\";\r\nimport Round from \"./Round\";\r\n\r\nfunction GameTimers(props) {\r\n  let [globalState, globalDispatch] = useStateValue();\r\n  let { players } = globalState;\r\n\r\n  const [state, dispatch] = useReducer(timersReducer, initialState(players));\r\n\r\n  useEffect(\r\n    () => {\r\n      let interval;\r\n      if (state.isEndOfRound || !state.isPaused) {\r\n        interval = setInterval(() => dispatch({ type: TIMER_TICK }), 100);\r\n      }\r\n      return () => clearInterval(interval);\r\n    },\r\n    [state.isPaused, state.isEndOfRound]\r\n  );\r\n\r\n  const onEndGame = () => {\r\n    console.log(\"onEndGame\");\r\n    console.log(state);\r\n\r\n    globalDispatch({\r\n      type: SET_TURNS,\r\n      turns: state.turns\r\n    });\r\n    props.onNext();\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <h1>Game in Progress</h1>\r\n      <div className=\"gameTimers\">\r\n        {state.isEndOfRound ? (\r\n          <Round\r\n            roundNumber={state.roundNumber}\r\n            roundTimer={state.endRoundTimer}\r\n            onStart={() =>\r\n              dispatch({\r\n                type: START_ROUND\r\n              })}\r\n            onEndGame={onEndGame}\r\n          />\r\n        ) : (\r\n          <React.Fragment>\r\n            {state.timers.map((timer, index) => (\r\n              <Timer\r\n                key={index}\r\n                id={index}\r\n                color={timer.color}\r\n                ticks={timer.ticks}\r\n                name={timer.name}\r\n                onStart={() =>\r\n                  dispatch({\r\n                    type: MAKE_TIMER_ACTIVE,\r\n                    timerId: index\r\n                  })}\r\n                onPause={() =>\r\n                  dispatch({\r\n                    type: PAUSE_TIMER,\r\n                    timerId: index\r\n                  })}\r\n              />\r\n            ))}\r\n            <p\r\n              className=\"btn-bottom-big\"\r\n              onClick={() =>\r\n                dispatch({\r\n                  type: END_ROUND\r\n                })}\r\n            >\r\n              EndRound\r\n            </p>\r\n          </React.Fragment>\r\n        )}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default GameTimers;\r\n","import React from \"react\";\r\nimport { useStateValue } from \"../../state/stateProvider\";\r\nimport { ticksToTime, ticksToShortTime } from \"../../utils\";\r\n\r\nconst avg = arr => Math.floor(arr.reduce((p, c) => p + c, 0) / arr.length);\r\nconst sum = arr => arr.reduce((p, c) => p + c, 0);\r\n\r\nfunction groupBy(list, keyGetter) {\r\n  const map = new Map();\r\n  list.forEach(item => {\r\n    const key = keyGetter(item);\r\n    const collection = map.get(key);\r\n    if (!collection) {\r\n      map.set(key, [item]);\r\n    } else {\r\n      collection.push(item);\r\n    }\r\n  });\r\n  return map;\r\n}\r\n\r\nconst calculatePlayerTurnAverages = turns => {\r\n  var playerTurns = groupBy(turns, turn => turn.name);\r\n  const playerAverages = [];\r\n\r\n  for (var key of playerTurns.keys()) {\r\n    let currentTurns = playerTurns\r\n      .get(key)\r\n      .map(playerTurn => playerTurn.duration);\r\n\r\n    let playerAverage = Math.floor(avg(currentTurns));\r\n    playerAverages.push({ player: key, average: playerAverage });\r\n  }\r\n\r\n  return playerAverages;\r\n};\r\n\r\nconst calculateTotals = (turns, groupByPicker, totalByPicker) => {\r\n  var groupedTurns = groupBy(turns, turn => groupByPicker(turn));\r\n  const totals = [];\r\n\r\n  for (var key of groupedTurns.keys()) {\r\n    let currentTurns = groupedTurns.get(key).map(turn => totalByPicker(turn));\r\n    let total = sum(currentTurns);\r\n    totals.push({ key: key, total: total });\r\n  }\r\n\r\n  return totals;\r\n};\r\n\r\nconst calculateRoundTotals = turns =>\r\n  calculateTotals(turns, turn => turn.round, turn => turn.duration);\r\nconst calculatePlayerTurnTotals = turns =>\r\n  calculateTotals(turns, turn => turn.name, turn => turn.duration);\r\nconst minTurnReducer = (currentMin, current) =>\r\n  currentMin.duration < current.duration ? currentMin : current;\r\n\r\nconst Summary = () => {\r\n  let [state] = useStateValue();\r\n  let { turns } = state;\r\n\r\n  var totalDuration = sum(turns.map(turn => turn.duration));\r\n  var playerTurns = turns.filter(turn => turn.name !== \"Setup\");\r\n\r\n  const shortestTurn = playerTurns.reduce(minTurnReducer, {\r\n    duration: 10000\r\n  });\r\n\r\n  const averages = calculatePlayerTurnAverages(playerTurns);\r\n  const roundTotals = calculateRoundTotals(turns);\r\n  const playerTotals = calculatePlayerTurnTotals(playerTurns);\r\n  console.log(playerTotals);\r\n\r\n  return (\r\n    <div className=\"summary\">\r\n      <h1>Summary</h1>\r\n      <h2> Total Duration </h2>\r\n      <p> {ticksToTime(totalDuration)}</p>\r\n      <h2> Shortest Turn </h2>\r\n      <p>\r\n        Shortest Turn: R{shortestTurn.round}: {shortestTurn.name} -{\" \"}\r\n        {ticksToShortTime(shortestTurn.duration)}{\" \"}\r\n      </p>\r\n      <h2> Player Average </h2>\r\n      {averages.map((average, index) => (\r\n        <p key={index}>\r\n          Player: {average.key} AverageTurn: {ticksToShortTime(average.average)}\r\n        </p>\r\n      ))}\r\n      <h2>Player totals</h2>\r\n      {playerTotals.map((playerTotal, index) => (\r\n        <p key={index}>\r\n          Round: {playerTotal.key}, Total: {ticksToTime(playerTotal.total)}\r\n        </p>\r\n      ))}\r\n      <h2>Round totals</h2>\r\n      {roundTotals.map((roundTotal, index) => (\r\n        <p key={index}>\r\n          Round: {roundTotal.key}, Total: {ticksToTime(roundTotal.total)}\r\n        </p>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Summary;\r\n","import React, { useState } from \"react\";\r\n\r\nimport PlayerSelect from \"../playerSelect/PlayerSelect\";\r\nimport GameTimers from \"../gameTimers/GameTimers\";\r\nimport Summary from \"../summary/Summary\";\r\n\r\nfunction TurnTracker() {\r\n  const [step, setStep] = useState(1);\r\n\r\n  const next = () => {\r\n    setStep(step + 1);\r\n  };\r\n\r\n  switch (step) {\r\n    case 1:\r\n      return <PlayerSelect onNext={next} />;\r\n    case 2:\r\n      return <GameTimers onNext={next} />;\r\n    case 3:\r\n      return <Summary />;\r\n    default:\r\n      return null;\r\n  }\r\n}\r\n\r\nexport default TurnTracker;\r\n","import React from \"react\";\nimport \"./App.scss\";\n\nimport TurnTracker from \"./components/turnTracker/TurnTracker\";\nimport StateProvider from \"./state/stateProvider\";\nimport { playerReducer, initialState } from \"./reducers/playerReducer\";\n\nconst App = () => {\n  return (\n    <div className=\"app\">\n      <div className=\"app-container\">\n        <StateProvider initialState={initialState} reducer={playerReducer}>\n          <TurnTracker />\n        </StateProvider>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.scss\";\nimport App from \"./app/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}